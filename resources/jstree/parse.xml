<program>program<declaration-list>declaration-list<declaration>declaration<type-specifier>type-specifier<token>int</token> + 
</type-specifier><token>ID<value>main</value></token> + 
<declaration-a>declaration-a<fun-declaration>fun-declaration<token>(</token> + 
<params>params<token>void</token> + 
<params-a>params-a<token>EPSILON</token> + 
</params-a></params><token>)</token> + 
<compound-stmt>compound-stmt<token>{</token> + 
<declaration-list>declaration-list<declaration>declaration<type-specifier>type-specifier<token>int</token> + 
</type-specifier><token>ID<value>a</value></token> + 
<declaration-a>declaration-a<var-declaration>var-declaration<token>;</token> + 
</var-declaration></declaration-a></declaration><declaration-list>declaration-list<declaration>declaration<type-specifier>type-specifier<token>int</token> + 
</type-specifier><token>ID<value>b</value></token> + 
<declaration-a>declaration-a<var-declaration>var-declaration<token>;</token> + 
</var-declaration></declaration-a></declaration><declaration-list>declaration-list<token>EPSILON</token> + 
</declaration-list></declaration-list></declaration-list><statement-list>statement-list<statement>statement<expression-stmt>expression-stmt<expression>expression<token>ID<value>a</value></token> + 
<expression-a>expression-a<var>var<token>EPSILON</token> + 
</var><expression-b>expression-b<token>=</token> + 
<expression>expression<token>NUM<value>1</value></token> + 
<term-a>term-a<token>EPSILON</token> + 
</term-a><additive-expression-a>additive-expression-a<token>EPSILON</token> + 
</additive-expression-a><simple-expression>simple-expression<token>EPSILON</token> + 
</simple-expression></expression></expression-b></expression-a></expression><token>;</token> + 
</expression-stmt></statement><statement-list>statement-list<statement>statement<expression-stmt>expression-stmt<expression>expression<token>ID<value>b</value></token> + 
<expression-a>expression-a<var>var<token>EPSILON</token> + 
</var><expression-b>expression-b<token>=</token> + 
<expression>expression<token>NUM<value>2</value></token> + 
<term-a>term-a<token>EPSILON</token> + 
</term-a><additive-expression-a>additive-expression-a<token>EPSILON</token> + 
</additive-expression-a><simple-expression>simple-expression<token>EPSILON</token> + 
</simple-expression></expression></expression-b></expression-a></expression><token>;</token> + 
</expression-stmt></statement><statement-list>statement-list<statement>statement<expression-stmt>expression-stmt<expression>expression<token>ID<value>a</value></token> + 
<expression-a>expression-a<var>var<token>EPSILON</token> + 
</var><expression-b>expression-b<token>=</token> + 
<expression>expression<token>ID<value>a</value></token> + 
<expression-a>expression-a<var>var<token>EPSILON</token> + 
</var><expression-b>expression-b<term-a>term-a<token>EPSILON</token> + 
</term-a><additive-expression-a>additive-expression-a<addop>addop<token>+</token> + 
</addop><term>term<factor>factor<token>ID<value>b</value></token> + 
<factor-a>factor-a<var>var<token>EPSILON</token> + 
</var></factor-a></factor><term-a>term-a<token>EPSILON</token> + 
</term-a></term><additive-expression-a>additive-expression-a<token>EPSILON</token> + 
</additive-expression-a></additive-expression-a><simple-expression>simple-expression<token>EPSILON</token> + 
</simple-expression></expression-b></expression-a></expression></expression-b></expression-a></expression><token>;</token> + 
</expression-stmt></statement><statement-list>statement-list<statement>statement<expression-stmt>expression-stmt<expression>expression<token>ID<value>output</value></token> + 
<expression-a>expression-a<call>call<token>(</token> + 
<args>args<arg-list>arg-list<expression>expression<token>ID<value>a</value></token> + 
<expression-a>expression-a<var>var<token>EPSILON</token> + 
</var><expression-b>expression-b<term-a>term-a<token>EPSILON</token> + 
</term-a><additive-expression-a>additive-expression-a<token>EPSILON</token> + 
</additive-expression-a><simple-expression>simple-expression<token>EPSILON</token> + 
</simple-expression></expression-b></expression-a></expression><arg-list-a>arg-list-a<token>EPSILON</token> + 
</arg-list-a></arg-list></args><token>)</token> + 
</call><term-a>term-a<token>EPSILON</token> + 
</term-a><additive-expression-a>additive-expression-a<token>EPSILON</token> + 
</additive-expression-a><simple-expression>simple-expression<token>EPSILON</token> + 
</simple-expression></expression-a></expression><token>;</token> + 
</expression-stmt></statement><statement-list>statement-list<token>EPSILON</token> + 
</statement-list></statement-list></statement-list></statement-list></statement-list><token>}</token> + 
</compound-stmt></fun-declaration></declaration-a></declaration><declaration-list>declaration-list<token>EPSILON</token> + 
</declaration-list></declaration-list><token>EOF</token> + 
</program>